.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-CHECKMESSAGE" "7" "" "Core Lightning 22.11rc1" ""
.SH NAME
lightning-checkmessage -- Command to check if a signature is from a node
.SH SYNOPSIS
\fBcheckmessage\fR \fImessage\fR \fIzbase\fR [\fIpubkey\fR]
.SH DESCRIPTION
The \fBcheckmessage\fR RPC command is the counterpart to
\fBsignmessage\fR: given a node id (\fIpubkey\fR), signature (\fIzbase\fR) and a
\fImessage\fR, it verifies that the signature was generated by that node
for that message (more technically: by someone who knows that node's
secret).
.PP
As a special case, if \fIpubkey\fR is not specified, we will try every
known node key (as per \fIlistnodes\fR), and verification succeeds if it
matches for any one of them.  Note: this is implemented far more
efficiently than trying each one, so performance is not a concern.
.PP
On failure, an error is returned and core lightning exit with the following error code:
- -32602: Parameter missed or malformed;
- 1301: \fIpubkey\fR not found in the graph.
.SH RETURN VALUE
On success, an object is returned, containing:
.IP "\(bu" 2
\fBverified\fR (boolean): whether the signature was valid (always \fItrue\fR)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBpubkey\fR (pubkey): the \fIpubkey\fR parameter, or the pubkey found by looking for known nodes
.SH AUTHOR
Rusty Russell <\fIrusty@rustcorp.com.au\fR> is mainly responsible.
.SH SEE ALSO
lightning-signmessage(7)
.SH RESOURCES
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
\" SHA256STAMP:4e9589854d62f0c57da87039fd6372ad88ea6e5dede658595ae81319b936cbd4
